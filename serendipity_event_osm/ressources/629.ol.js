"use strict";(self.webpackChunkol=self.webpackChunkol||[]).push([[629],{165:function(e,t,n){function r(e,t){let n=e.length-t,r=0;do{for(let n=t;n>0;n--)e[r+t]+=e[r],r++;n-=t}while(n>0)}function o(e,t,n){let r=0,o=e.length;const a=o/n;for(;o>t;){for(let n=t;n>0;--n)e[r+t]+=e[r],++r;o-=t}const i=e.slice();for(let t=0;t<a;++t)for(let r=0;r<n;++r)e[n*t+r]=i[(n-r-1)*a+t]}n.d(t,{Z:function(){return a}});class a{async decode(e,t){const n=await this.decodeBlock(t),a=e.Predictor||1;if(1!==a){const t=!e.StripOffsets;return function(e,t,n,a,i,s){if(!t||1===t)return e;for(let e=0;e<i.length;++e){if(i[e]%8!=0)throw new Error("When decoding with predictor, only multiple of 8 bits are supported.");if(i[e]!==i[0])throw new Error("When decoding with predictor, all samples must have the same size.")}const c=i[0]/8,f=2===s?1:i.length;for(let s=0;s<a&&!(s*f*n*c>=e.byteLength);++s){let a;if(2===t){switch(i[0]){case 8:a=new Uint8Array(e,s*f*n*c,f*n*c);break;case 16:a=new Uint16Array(e,s*f*n*c,f*n*c/2);break;case 32:a=new Uint32Array(e,s*f*n*c,f*n*c/4);break;default:throw new Error(`Predictor 2 not allowed with ${i[0]} bits per sample.`)}r(a,f)}else 3===t&&(a=new Uint8Array(e,s*f*n*c,f*n*c),o(a,f,c))}return e}(n,a,t?e.TileWidth:e.ImageWidth,t?e.TileLength:e.RowsPerStrip||e.ImageLength,e.BitsPerSample,e.PlanarConfiguration)}return n}}},629:function(e,t,n){n.r(t),n.d(t,{default:function(){return o}});var r=n(165);class o extends r.Z{constructor(){if(super(),"undefined"==typeof createImageBitmap)throw new Error("Cannot decode WebImage as `createImageBitmap` is not available");if("undefined"==typeof document&&"undefined"==typeof OffscreenCanvas)throw new Error("Cannot decode WebImage as neither `document` nor `OffscreenCanvas` is not available")}async decode(e,t){const n=new Blob([t]),r=await createImageBitmap(n);let o;"undefined"!=typeof document?(o=document.createElement("canvas"),o.width=r.width,o.height=r.height):o=new OffscreenCanvas(r.width,r.height);const a=o.getContext("2d");return a.drawImage(r,0,0),a.getImageData(0,0,r.width,r.height).data.buffer}}}}]);
//# sourceMappingURL=629.ol.js.map